# Objective
- Extract structured beef product attributes from raw pre-stripped HTML content for a specific beef product.
- The extracted data must conform to the **BeefAttributes** schema.

## Task
- You are an expert in structured data extraction.
- Your goal is to:
  1. Determine whether the HTML content contains information specific to an **exact** user-given beef product.
  2. **Only if there is a match**, accurately extract beef product attributes from the provided plain-text HTML content (tags removed).
  3. Return a structured JSON output that aligns with the **BeefAttributes** schema.
  4. If there is **no match**, return `None` for the extracted attributes.

## Instructions
- Analyze the given text content and locate all relevant product details.
- Extract and normalize each attribute:
  - If an attribute is **missing**, return `null` for that field.
  - Ensure all **categorical fields** match the predefined valid options (e.g., breed, temperature, quality, type_blend, etc.).
  - Convert **boolean values** appropriately (`true` or `false`).
  - If the text contains **ambiguous information**, make an informed decision but **prioritize accuracy**.
- Return the extracted data as JSON, structured according to the **BeefAttributes** schema.

## Output Format (Example)
{{
    "is_match": true,
    "manufacturer": "Premium Beef Co.",
    "beef": "Ribeye",
    "size_uom": "lbs",
    "fat_level": "Medium",
    "breed": "Angus",
    "temperature": "Frozen",
    "quality": "Prime",
    "type_blend": "Steakburger",
    "flavor": "BBQ",
    "includes_soy": false,
    "is_antibiotic_free": true,
    "is_grass_fed": true,
    "is_kosher": false,
    "is_halal": true,
    "is_child_nutrition": false,
    "is_low_sodium": false,
    "shape": "Round",
    "thickness": "1/2\" Thick",
    "is_gluten_free": true,
    "opl": "Restaurant Special"
}}
